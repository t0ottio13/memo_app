{"version":3,"sources":["reportWebVitals.js","Persist.js","memo/Item.js","memo/Memo.js","memo/AddForm.js","memo/FindForm.js","memo/DelForm.js","memo/MemoPage.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","usePersist","ky","initVal","key","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","savedValue","setSavedValue","val","setItem","stringify","Item","props","d","Date","value","created","f","getMonth","getDate","getHours","getMinutes","className","style","padding","index","width","href","url","message","color","Memo","memo","fmemo","mode","setMode","data","map","AddForm","setMemo","setUrl","setMessage","onSubmit","e","unshift","action","type","placeholder","onChange","target","required","FindForm","setFMemo","res","filter","includes","DelForm","num","setNum","items","substring","defaultValue","MemoPage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48514df1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react'\n// ここではキーの名前を示す定数Keyの他に、valueとsetValueという二つの関数を用意している。\n\n\nfunction usePersist(ky, initVal) {\n    // keyにhooks:~となるよう値をセット。\n    const key = \"hooks:\" + ky\n    const value = () => {\n        // try~catch文は試す処理を定義し、例外が怒った時の挙動を指定する\n        try {\n            // itemにローカルストレージのkeyに対応するデータを渡す。\n            const item = window.localStorage.getItem(key)\n            // ？はif文の短縮形 trueを返したら、その後の処理をする\n            // ここでは、ローカルストレージにitemデータがあればJSON形式を元に戻して返す。\n            return item ? JSON.parse(item) : initVal\n        } catch (error) {\n            console.log(error)\n            return initVal;\n        }\n    }\n\n    // 引数valの値をJSON形式のテキストに変換してローカルストレージに保管\n    const setValue = (val) => {\n        try {\n            // setSavedValueは、この後のsavedValueステートに値を設定するためのもの。\n            setSavedValue(val)\n            window.localStorage.setItem(key, JSON.stringify(val))\n        }catch (error) {\n            console.log(error)\n        }\n    }\n\n    // saveValueは保管する値を保持するためのステート\n    // useState(value)では、valueを使って値が取り出されるようになっている。\n    const [savedValue, setSavedValue] = useState(value)\n\n    return [savedValue, setValue]\n}\n\nexport default usePersist\n","import React, { useState, useEffect } from 'react'\n\nfunction Item(props) {\n    const th = {\n        padding: \"0 0 0 5px\"\n    }\n\n    const dateStyle = {\n        padding: \"0 0 0 5px\",\n        color:\"grey\"\n    }\n\n    const messageStyle = {\n        padding: \"2px 0 2px 5px\",\n        width:\"100%\"\n    }\n    let d = new Date(Date.parse(props.value.created))\n    let f = d.getMonth() + '/' + d.getDate() + ' '\n        + d.getHours() + ':' + d.getMinutes()\n\n    return (\n        <tbody className=\"border p-0\">\n            <tr className=\"border-0 \">\n                <th className=\"text-primary bg-white border-0\" style={th}>{props.index}.</th>\n            </tr>\n            <tr className=\"border-0\">\n                <td style={messageStyle} className=\" bg-white border-0 \"><a className=\"bg-light\" href={props.value.url}>{props.value.message}</a></td>\n            </tr>\n            <tr className=\"border-0\">\n                <td className=\"bg-white border-0\" style={dateStyle}>{f}</td>\n            </tr>\n        </tbody>\n    )\n}\n\nexport default Item\n\n","import React, { useState, useEffect } from 'react'\nimport usePersist from '../Persist'\nimport Item from './Item'\n\n// やってることはデータをテーブルに書き出している。\n\nfunction Memo() {\n    // memoというステートにkey:memoと初期値を渡している。\n    const [memo, setMemo] = usePersist(\"memo\", [])\n    const [fmemo, setFMemo] = usePersist(\"findMemo\", [])\n    const [mode, setMode] = usePersist(\"mode\", 'default')\n\n    let data = []\n\n    // switchをしているのは、追加や検索、それぞれのモードに応じてメモを表示させるため。\n    switch (mode) {\n        // 追加と削除の時は'default'モード\n        case 'default':\n            // mapメソッドを使って、配列から要素を取り出して、ステートに渡している。\n            data = memo.map((value, key)=>(\n                <Item key={value.message} value={value} index={key + 1} />\n            ))\n            // deafult => defaultにすると無限ループ発生\n            setMode('')\n            break\n\n        // 検索の時は、'find'モード\n        case '検索中':\n            data = fmemo.map((value, key) => (\n                // Itemにステートを渡している。\n                <Item key={value.message} value={value} index={key + 1}/>\n            ))\n            break\n\n        default:\n            data = memo.map((value, key) => (\n                <Item key={value.message} value={value} index={key + 1}/>\n            ))\n    }\n\n    return (\n        <table className=\"table mt-4\">\n            { data }\n        </table>\n    )\n}\n\nexport default Memo\n\n","import React, { useState, useEffect } from 'react'\nimport usePersist from '../Persist'\n\n// ここはメモを追加するコンポーネントじゃ\n\nfunction AddForm(props) {\n    const [memo, setMemo] = usePersist(\"memo\", [])\n    const [url, setUrl] = usePersist('')\n    const [message, setMessage] = useState('')\n\n    // 記入すると呼び出される\n    // メッセージをステートにセットしてる\n    const doChange = (e) => {\n        // targetはここではメモのテキスト内容\n        setMessage(e.target.value)\n    }\n    const doChangeUrl = (e) => {\n        // targetはここではメモのテキスト内容\n        setUrl(e.target.value)\n    }\n\n    // 送信時に呼び出される\n    const doAction = (e) => {\n        const data = {\n            url: url,\n            message: message,\n            created: new Date()\n            // 配列に加えるものを定義\n            // ここでは、メッセージと制作日\n        }\n        // メモに配列を加えている,\n        // unshift は 配列に値を追加するJSメソッド\n        memo.unshift(data)\n        // メモステートを更新している\n        setMemo(memo)\n        // 送信後、メモ内のテキストを空にする\n        setMessage('')\n        setUrl('')\n    }\n\n    return (\n        <form onSubmit={doAction} action=\"\" className=\"mb-2 \">\n            <div className=\"from-group row\">\n                <input type=\"text\" className=\"form-control-sm col bg-white\"\n                    placeholder=\"タイトルをつける\"\n                    onChange={doChange} value={message} required\n                />\n                <input type=\"url\" className=\"form-control-sm col bg-white\"\n                    placeholder=\"URLを記入\"\n                    onChange={doChangeUrl} value={url} required\n                />\n                <input type=\"submit\" value=\"追加\"\n                    className=\"btn btn-primary btn-sm col-2 \"\n                />\n            </div>\n        </form>\n    )\n}\n\nexport default AddForm","import React, { useState, useEffect, memo } from 'react'\nimport usePersist from '../Persist'\n\n// ここはmemoを検索するためのコンポーネントじゃ\n\nfunction FindForm() {\n    // ここでは４つのstateを受け取る準備をしている\n    const [memo, setMemo] = usePersist(\"memo\", [])\n    const [fmemo, setFMemo] = usePersist(\"findMemo\", [])\n    const [message, setMessage] = usePersist('')\n    const [mode, setMode] = usePersist('mode', 'find')\n\n    const doChange = (e) => {\n        setMessage(e.target.value)\n    }\n\n    const doAction = (e) => {\n        if (message == '') {\n            // なにもメッセージが保存されていなかったら、modeをdefaultに戻す処理\n            setMode('default')\n            return\n        }\n        let res = memo.filter((item, key) => {\n            // includesメソッドは、特定の要素が配列に含まれているかを探すメソッド\n            // messageはdoChangeで受けとている。\n            return item.message.includes(message)\n        })\n        setFMemo(res)\n        setMode('検索中')\n        setMessage('')\n    }\n\n    return (\n        <form onSubmit={doAction} className=\"my-2\">\n            <div className=\"form-group row\">\n                <input type=\"text\" onChange={doChange}\n                    value={message} className=\"form-control-sm col bg-white\"\n                    placeholder=\"検索： キーワードを入力\"\n                />\n                <input type=\"submit\" value=\"さがす\"\n                    className=\"btn btn-primary btn-sm col-2\"\n                />\n            </div>\n        </form>\n    )\n}\n\nexport default FindForm","import React, { useState, useEffect, memo } from 'react'\nimport usePersist from '../Persist'\n// ここは保存された値を削除するためのコンポーネントじゃ\n\nfunction DelForm() {\n    // 保存されたmemoの値を[]に書き換えることで削除している。\n    const [memo, setMemo] = usePersist(\"memo\", [])\n    const [num, setNum] = useState(0)\n\n    const doChange = (e) => {\n        setNum(e.target.value)\n    }\n\n    const doAction = (e) => {\n        // filterメソッド\n        let res = memo.filter((item, key) => {\n            // key以外を取り除いた配列が作られる\n            return key != num\n        })\n        // 作成、編集された配列をsetMemoする\n        setMemo(res)\n        // 選択項目の番号を０に戻す\n        setNum(0)\n    }\n\n    let items = memo.map((value, key) =>(\n        <option key={key} value={key}>\n            {value.message.substring(0,10)}\n        </option>\n    ))\n\n    return (\n        <form onSubmit={doAction} className=\"my-2\">\n            <div className=\"form-group row\">\n                <select onChange={doChange}\n                    className=\"form-control-sm col bg-white\"\n                    // 選択欄の一番上が０になるように\n                    defaultValue=\"-1\"\n                >\n                    {items}\n                </select>\n                <input type=\"submit\" value=\"削除\"\n                    className=\"btn btn-primary btn-sm col-2\"\n                />\n            </div>\n        </form>\n    )\n}\n\nexport default DelForm","import usePersist from '../Persist'\nimport Memo from './Memo';\nimport AddForm from './AddForm';\nimport FindForm from './FindForm';\nimport DelForm from './DelForm';\n\nfunction MemoPage() {\n    const [mode, setMode] = usePersist('mode', 'default')\n\n    return (\n        <div className=\"memoPageBackground\">\n            <h5 className=\"my-3\">{ mode }</h5>\n            <div className=\"alert alert-info pb-0\">\n                {/* 追加フォームとボタン */}\n                <AddForm />\n                {/* 探すフォームとボタン */}\n                <FindForm />\n                {/* 削除フォームとボタン */}\n                <DelForm/>\n            </div>\n            {/* 登録したメモが出てくるところ */}\n            <Memo/>\n        </div>\n    )\n}\n\nexport default MemoPage","import './App.css'\nimport MemoPage from './memo/MemoPage'\n\nfunction App() {\n  return (\n    <div>\n      <h1 className=\"fw-bold text-primary display-4 p-3 m-1 text-center\"> URL メモ </h1>\n      <div className=\"container mt-3\">\n        <h4 className=\"my-3\"></h4>\n        {/* メモのメイン全体画面を読み込んでいる */}\n        < MemoPage />\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* App.jsを読み込んでいる */}\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}