{"version":3,"sources":["reportWebVitals.js","Persist.js","memo/Item.js","memo/Memo.js","memo/AddForm.js","memo/FindForm.js","memo/DelForm.js","memo/MemoPage.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","usePersist","ky","initVal","key","useState","item","window","localStorage","getItem","JSON","parse","err","console","log","savedValue","setSavedValue","val","setItem","stringify","Item","props","d","Date","value","created","f","getMonth","getDate","getHours","getMinutes","style","width","index","message","textAlign","Memo","memo","fmemo","mode","setMode","data","map","className","AddForm","setMemo","setMessage","onSubmit","e","unshift","action","type","onChange","target","required","FindForm","setFMemo","res","filter","includes","DelForm","num","setNum","items","substring","defaultValue","MemoPage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0c5d710.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react'\n\nfunction usePersist(ky, initVal) {\n    const key = \"hooks:\" + ky\n    const value = () => {\n        try {\n            const item = window.localStorage.getItem(key)\n            return item ? JSON.parse(item) : initVal\n        } catch (err) {\n            console.log(err)\n            return initVal;\n        }\n    }\n\n    const setValue = (val) => {\n        try {\n            setSavedValue(val)\n            window.localStorage.setItem(key, JSON.stringify(val))\n        }catch (err) {\n            console.log(err)\n        }\n    }\n\n    const [savedValue, setSavedValue] = useState(value)\n\n    return [savedValue, setValue]\n}\n\nexport default usePersist\n","import React, { useState, useEffect } from 'react'\n\nfunction Item(props) {\n    const th = {\n        width: \"100px\"\n    }\n    const td = {\n        textAlign: \"right\",\n        width: \"150px\"\n    }\n    let d = new Date(Date.parse(props.value.created))\n    let f = d.getMonth() + '/' + d.getDate() + ' '\n        + d.getHours() + ':' + d.getMinutes()\n\n    return (\n        <tr>\n            <th style={th}>No, {props.index}</th>\n            <td>{ props.value.message}</td>\n            <td style={td}>{f}</td>\n        </tr>\n    )\n}\n\nexport default Item\n\n","import React, { useState, useEffect } from 'react'\nimport usePersist from '../Persist'\n\nimport Item from './Item'\n\nfunction Memo(props) {\n    const [memo, setMemo] = usePersist(\"memo\", [])\n    const [fmemo, setFMemo] = usePersist(\"findMemo\", [])\n    const [mode, setMode] = usePersist(\"mode\", 'default')\n\n    let data = []\n\n    switch (mode) {\n        case 'default':\n            data = memo.map((value, key)=>(\n                <Item key={value.message} value={value} index={key + 1} />\n            ))\n            setMode('deafult')\n            break\n\n        case 'find':\n            data = fmemo.map((value, key) => (\n                <Item key={value.message} value={value} index={key + 1}/>\n            ))\n            break\n\n        default:\n            data = memo.map((value, key) => (\n                <Item key={value.message} value={value} index={key + 1}/>\n            ))\n    }\n\n    return (\n        <table className=\"table mt-4\">\n            <tbody>{ data }</tbody>\n        </table>\n    )\n}\n\nexport default Memo\n\n","import React, { useState, useEffect } from 'react'\nimport usePersist from '../Persist'\n\nfunction AddForm(props) {\n    const [memo, setMemo] = usePersist(\"memo\", [])\n    const [message, setMessage] = useState('')\n\n    const doChange = (e) => {\n        setMessage(e.target.value)\n    }\n    const doAction = (e) => {\n        const data = {\n            message: message,\n            created: new Date()\n        }\n        memo.unshift(data)\n        setMemo(memo)\n        setMessage('')\n    }\n\n    return (\n        <form onSubmit={doAction} action=\"\" >\n            <div className=\"from-group row\">\n                <input type=\"text\" className=\"form-control-sm col\"\n                    onChange={doChange} value={message} required />\n                <input type=\"submit\" value=\"Add\"\n                    className=\"btn btn-primary btn-sm col-2\"/>\n            </div>\n        </form>\n    )\n}\n\nexport default AddForm","import React, { useState, useEffect, memo } from 'react'\nimport usePersist from '../Persist'\n\nfunction FindForm(props) {\n    const [memo, setMemo] = usePersist(\"memo\", [])\n    const [fmemo, setFMemo] = usePersist(\"findMemo\", [])\n    const [message, setMessage] = usePersist('')\n    const [mode, setMode] = usePersist('mode', 'find')\n\n    const doChange = (e) => {\n        setMessage(e.target.value)\n    }\n\n    const doAction = (e) => {\n        if (message == '') {\n            setMode('default')\n            return\n        }\n        let res = memo.filter((item, key) => {\n            return item.message.includes(message)\n        })\n        setFMemo(res)\n        setMode('find')\n        setMessage('')\n    }\n\n    return (\n        <form onSubmit={doAction}>\n            <div className=\"form-group row\">\n                <input type=\"text\" onChange={doChange}\n                    value={message} className=\"form-control-sm col\" />\n                <input type=\"submit\" value=\"Find\"\n                    className=\"btn btn-primary btn-sm col-2\"/>\n            </div>\n        </form>\n    )\n}\n\nexport default FindForm","import React, { useState, useEffect, memo } from 'react'\nimport usePersist from '../Persist'\n\nfunction DelForm(props) {\n    const [memo, setMemo] = usePersist(\"memo\", [])\n    const [num, setNum] = useState(0)\n\n    const doChange = (e) => {\n        setNum(e.target.value)\n    }\n\n    const doAction = (e) => {\n        let res = memo.filter((item, key) => {\n            return key != num\n        })\n        setMemo(res)\n        setNum(0)\n    }\n\n    let items = memo.map((value, key) =>(\n        <option key={key} value={key}>\n            {value.message.substring(0,10)}\n        </option>\n    ))\n\n    return (\n        <form onSubmit={doAction}>\n            <div className=\"form-group row\">\n                <select onChange={doChange}\n                        className=\"form-control-sm col\"\n                    defaultValue=\"-1\"\n                >\n                    {items}\n                </select>\n                <input type=\"submit\" value=\"Del\"\n                    className=\"btn btn-primary btn-sm col-2\" />\n            </div>\n        </form>\n    )\n}\n\nexport default DelForm","import usePersist from '../Persist'\nimport Memo from './Memo';\nimport AddForm from './AddForm';\nimport FindForm from './FindForm';\nimport DelForm from './DelForm';\n\nfunction MemoPage() {\n    const [mode, setMode] = usePersist('mode', 'default')\n\n    return (\n        <div>\n            <h5 className=\"my-3\">mode: {mode}</h5>\n            <div className=\"alert alert-primary pb-0\">\n                <AddForm/>\n                <FindForm/>\n                <DelForm/>\n            </div>\n            <Memo/>\n        </div>\n    )\n}\n\nexport default MemoPage","import './App.css'\nimport MemoPage from './memo/MemoPage'\n\nfunction App() {\n  return (\n    <div>\n      <h1 className=\"bg-primary text-white display-4\">Memo App by React</h1>\n      <div className=\"container mt-3\">\n        <h4 className=\"my-3\">Memo.</h4>\n        < MemoPage />\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}